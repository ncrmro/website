name: Validate
on:
  push:
    paths:
      - '**'

env:
  CONTAINER_REPO: harbor.ncrmro.com/ncrmro-static


jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      - run: npm ci

      - run: |
          npm run build-migrations
          npm run mig

      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-1.35.1

      - name: Install Playwright Browsers
        run: npm exec playwright -- install chromium
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - run: npm run e2e

      - name: Upload Playwright Test Artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright
          path: website/test-results/**
          retention-days: 5

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: harbor.ncrmro.com
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_SECRET }}

      - id: package-lock-docker-hash
        run: echo "HASH=$(git hash-object package-lock.json)-$(git hash-object Dockerfile)" >> "$GITHUB_OUTPUT"

      - uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ steps.package-lock-docker-hash.outputs.HASH }}

      - run: echo "SHA=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
        id: short-sha
      - uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ env.CONTAINER_REPO }}:${{ steps.short-sha.outputs.SHA }},${{ env.CONTAINER_REPO }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

  deploy:
    runs-on: ubuntu-latest
#    if: github.ref == 'refs/heads/main'
    needs: [validate, build]
    steps:
      - uses: actions/checkout@v3
      - uses: azure/setup-helm@v3
        with:
          version: v3.11.2
      - run: mkdir ~/.kube && echo "${{ secrets.OCEAN_KUBECONFIG }}" > ~/.kube/config
      - run: echo "SHA=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
        id: short-sha
      - run: helm dependency build ./chart
      - run: >
          helm --namespace ncrmro-com upgrade --install
          --wait website ./chart
          --values ./chart/values.production.yaml